name: Build WebPublish For Win/Mac/Linux

# trigger
on:
  push:
    tags:
      - "v*"

# jobs
jobs:
  release:
    name: build and release WebPublish

    # type of machine to run the job on
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["windows-latest", "macos-latest", "ubuntu-latest"]

    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 12.21.0

      # step3: Npm install
      - name: npm install
        run: |
          npm install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step4: build app
      - name: build app
        run: |
          npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step5: cleanup artifacts in build
      - name: cleanup artifacts
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "build/!(*.exe)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: cleanup artifacts
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "build/!(*.dmg)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: cleanup artifacts
        if: matrix.os == 'ubuntu-latest'
        run: |
          npx rimraf "build/!(*.deb)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{ matrix.os }}
          path: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "build/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
